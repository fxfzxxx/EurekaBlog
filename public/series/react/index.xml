<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on Aaron 的博客</title>
    <link>/series/react/</link>
    <description>Recent content in react on Aaron 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2021 Aaron Fan
</copyright>
    <lastBuildDate>Mon, 28 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="/series/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>react之 Hooks 和一些扩展</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/9-hooks-%E5%8F%8A%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/</link>
      <pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/9-hooks-%E5%8F%8A%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/</guid>
      <description>1. setState setState更新状态的2种写法 (1). setState(stateChange, [callback])------对象式的setState 1.sta</description>
    </item>
    
    <item>
      <title>react之 第三方 redux 的使用</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/8-redux/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/8-redux/</guid>
      <description>Redux redux是什么 redux是一个专门用于做状态管理的JS库(不是react插件库)。 它可以用在react, angular,</description>
    </item>
    
    <item>
      <title>react之 UI 组件库</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/7-ui%E7%BB%84%E4%BB%B6%E5%BA%93/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/7-ui%E7%BB%84%E4%BB%B6%E5%BA%93/</guid>
      <description>流行的开源 React UI 组件库 国外: material-UI 国内: ant-design antd 安装: yarn add antd 基本使用 import React, { Component } from &amp;quot;react&amp;quot; import { Button } from &amp;quot;antd&amp;quot; import { WechatOutlined } from &#39;@ant-design/icons&#39; import &amp;quot;antd/dist/antd.css&amp;quot; export default class App extends</description>
    </item>
    
    <item>
      <title>react之 初识路由</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/6-%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/6-%E8%B7%AF%E7%94%B1/</guid>
      <description>SPA 单页面应用 Single Page Application 整个应用只有一个完整的页面 点击页面中的连接不会刷新页面, 只会做页面的局部刷新 数据都用 Ajax 请求,</description>
    </item>
    
    <item>
      <title>react之 AJAX</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/5-ajax/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/5-ajax/</guid>
      <description>axios 的使用 react 主要使用 axios 来进行异步请求. 配置单个代理的注意事项 代理服务器的域名和端口是和客户端相同的. 跨域的时候,</description>
    </item>
    
    <item>
      <title>react之 脚手架</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/4-%E8%84%9A%E6%89%8B%E6%9E%B6/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/4-%E8%84%9A%E6%89%8B%E6%9E%B6/</guid>
      <description>脚手架的意义 xxx脚手架: 用来帮助程序员快速创建一个基于xxx库的模板项目 包含了所有需要的配置（语法检查、js</description>
    </item>
    
    <item>
      <title>react之 Diffing 算法</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/3-dom-%E7%9A%84-diffing-%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/3-dom-%E7%9A%84-diffing-%E7%AE%97%E6%B3%95/</guid>
      <description>证明 Diffing 算法存在的小案例 //1.创建组件 class Time extends React.Component { state ={date: new Date()} componentDidMount() { setInterval(()=&amp;gt; { this.setState( {date: new Date()} ) },1000) } //在两个不同级别的 input 内输入内容</description>
    </item>
    
    <item>
      <title>react之生命周期</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/2-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/2-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>引出声明周期 在组件挂载(mount)完毕后接着开启定时器, 在卸载(unmount)定时器后, 接着取消定时器. 就</description>
    </item>
    
    <item>
      <title>react之基本语法</title>
      <link>/posts/%E7%A7%91%E6%8A%80/react/1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/react/1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <description>Creating a Toolchain from Scratch A JavaScript build toolchain typically consists of: A package manager, such as Yarn or npm. It lets you take advantage of a vast ecosystem of third-party packages, and easily install or update them. A bundler, such as webpack or Parcel. It lets you write modular code and bundle it together</description>
    </item>
    
  </channel>
</rss>
