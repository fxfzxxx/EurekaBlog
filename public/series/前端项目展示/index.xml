<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端项目展示 on Aaron 的博客</title>
    <link>/series/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/</link>
    <description>Recent content in 前端项目展示 on Aaron 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2021 Aaron Fan
</copyright>
    <lastBuildDate>Mon, 28 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="/series/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An example program of react-redux implementation</title>
      <link>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/react-redux-example-program/</link>
      <pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/react-redux-example-program/</guid>
      <description>Project Features States are managed by redux. UI components are sealed in containers without data proceed. Two components can communicate though react-redux. Project&amp;rsquo;s technology stack html + CSS + JavaScript + React + react-redux + redux Project source code The source code can be found in Github repo react-redux demo. Please click to check the</description>
    </item>
    
    <item>
      <title>Greedy Snake mini-game developed by ES6 modularly</title>
      <link>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/%E8%B4%AA%E5%90%83%E8%9B%87/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/%E8%B4%AA%E5%90%83%E8%9B%87/</guid>
      <description>Project Features Interactive functions implemented by native js ES6 modular development Divided into four classes Food Class: generate a food with random position. Snake Class: initialize a snake, add one unit of lenth, enable movement and moniter if the sanke is dead. Rules Class: set up the speed, score, when to start and end, rules</description>
    </item>
    
    <item>
      <title>ToDo 待办事项项目</title>
      <link>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/todomvc/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/todomvc/</guid>
      <description>项目特点 原生 js 实现的交互功能 localStorage 实现的数据持久化 构建过程中, 首先实现了用已知数据来渲染页面, 然后再通过监听事件来</description>
    </item>
    
    <item>
      <title>小米首页的模拟</title>
      <link>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/%E5%B0%8F%E7%B1%B3%E9%A6%96%E9%A1%B5%E6%A8%A1%E4%BB%BF/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/%E5%B0%8F%E7%B1%B3%E9%A6%96%E9%A1%B5%E6%A8%A1%E4%BB%BF/</guid>
      <description>项目的特点 CSS 实现的下拉菜单, 并且鼠标悬浮菜单不收回. CSS 实现了众多动态效果, 例如首页图表的雪碧图动画. 利用爬虫脚</description>
    </item>
    
    <item>
      <title>渐变轮播图</title>
      <link>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/%E6%B8%90%E5%8F%98%E8%BD%AE%E6%92%AD%E5%9B%BE/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%A7%91%E6%8A%80/%E9%A1%B9%E7%9B%AE/%E6%B8%90%E5%8F%98%E8%BD%AE%E6%92%AD%E5%9B%BE/</guid>
      <description>这个功能在网站的首页比较常见, 通常用于产品的宣传. 另外, 也常见于一些图片集的展示. 通过一些扩展可以实现更完整的</description>
    </item>
    
  </channel>
</rss>
